name: Deploy to Amazon ECS


on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]


env:
  DOCKER_IMAGE_NAME: sean7059/movie
  EC2_HOST: ec2-13-209-97-24.ap-northeast-2.compute.amazonaws.com
  EC2_SSH_USER: ubuntu
  PRIVATE_KEY: ${{ secrets.EC2_SSH }}


jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven


      - name: Set up application.properties
        run: echo "${{ secrets.DATABASE_INFO }}" > ./src/main/resources/application.properties


      - name: Build with Maven
        run: mvn -B package --file pom.xml


      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:latest


      - name: Login to Docker Hub using Access Token
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_ID }} --password-stdin


      - name: Push the Docker image
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest


  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest


    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.PRIVATE_KEY }}
          script: |
            for id in $(sudo docker ps -q --filter "ancestor=${{ env.DOCKER_IMAGE_NAME }}:latest"); do
              sudo docker stop $id
              sudo docker rm $id
            done


            # 이미지 최신화 및 실행
            sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest    
            sudo docker run -d -p 8080:8080  ${{ env.DOCKER_IMAGE_NAME }}:latest



